[
    {
        "id": "52f81779ae177af1",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6ccf18213bcba12c",
        "type": "ui_form",
        "z": "52f81779ae177af1",
        "name": "",
        "label": "Enter the data ",
        "group": "c6bcc53119172c01",
        "order": 0,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "File Path",
                "value": "filepath",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Keyword",
                "value": "keyword",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "filepath": "",
            "keyword": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 140,
        "y": 120,
        "wires": [
            [
                "b556c32a82ed9e70"
            ]
        ]
    },
    {
        "id": "b556c32a82ed9e70",
        "type": "function",
        "z": "52f81779ae177af1",
        "name": "function 1",
        "func": "var data = {};\ndata.user = msg.payload;\nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 120,
        "wires": [
            [
                "033ae30cf6d99412",
                "8e16ac4ec04e376f"
            ]
        ]
    },
    {
        "id": "033ae30cf6d99412",
        "type": "debug",
        "z": "52f81779ae177af1",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 120,
        "wires": []
    },
    {
        "id": "52591e49be3878b4",
        "type": "mysql",
        "z": "52f81779ae177af1",
        "mydb": "37bcb5733cefd284",
        "name": "NODERED_DB",
        "x": 600,
        "y": 240,
        "wires": [
            [
                "5166d5f006700a25"
            ]
        ]
    },
    {
        "id": "8e16ac4ec04e376f",
        "type": "function",
        "z": "52f81779ae177af1",
        "name": "function 2",
        "func": "// Extract the values from the input object\nlet timestamp = new Date().toISOString().replace('T', ' ').replace('Z', '');  // Formats to 'YYYY-MM-DD HH:MM:SS'\nlet filepath = msg.payload.user.filepath;  // Extracts filepath from the object\nlet keyword = msg.payload.user.keyword;    // Extracts keyword from the object\n\n// Create the SQL query as a string\nlet sqlQuery = `INSERT INTO VIDEOS (TIMESTAMP, FILEPATH, KEYWORD) VALUES ('${timestamp}', '${filepath}', '${keyword}')`;\n\n// Set the query as the topic\nmsg.topic = sqlQuery;\n\n// Return the message object\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 220,
        "wires": [
            [
                "52591e49be3878b4",
                "07d796c976212b60"
            ]
        ]
    },
    {
        "id": "5166d5f006700a25",
        "type": "debug",
        "z": "52f81779ae177af1",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 240,
        "wires": []
    },
    {
        "id": "07d796c976212b60",
        "type": "debug",
        "z": "52f81779ae177af1",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 320,
        "wires": []
    },
    {
        "id": "a9c5f0a842a807e4",
        "type": "ui_form",
        "z": "52f81779ae177af1",
        "name": "",
        "label": "Enter the default Keyword ",
        "group": "6fe2ec477b5390cb",
        "order": 0,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Keyword",
                "value": "keyword",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "keyword": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 150,
        "y": 420,
        "wires": [
            [
                "07a1655cc25448d3"
            ]
        ]
    },
    {
        "id": "07a1655cc25448d3",
        "type": "function",
        "z": "52f81779ae177af1",
        "name": "function 4",
        "func": "var data = {};\ndata.user = msg.payload;\nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 420,
        "wires": [
            [
                "2692276a97512e0d",
                "9931a8b838f1ba9c"
            ]
        ]
    },
    {
        "id": "2692276a97512e0d",
        "type": "debug",
        "z": "52f81779ae177af1",
        "name": "debug 9",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 420,
        "wires": []
    },
    {
        "id": "f9361a26415b24c1",
        "type": "mqtt in",
        "z": "52f81779ae177af1",
        "name": "",
        "topic": "videos/playlist",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "b99d025e1c14164d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 600,
        "wires": [
            [
                "b787b51bf18aaaec",
                "4cd0c4aff857e295"
            ]
        ]
    },
    {
        "id": "b787b51bf18aaaec",
        "type": "debug",
        "z": "52f81779ae177af1",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 600,
        "wires": []
    },
    {
        "id": "4cd0c4aff857e295",
        "type": "function",
        "z": "52f81779ae177af1",
        "name": "function 5",
        "func": "// Extract the keyword from msg.payload\nvar keyword = msg.payload;  // \"sprite\" in this case\n\n// Construct the SQL query to search for the file path\nvar sqlQuery = `SELECT FILEPATH FROM VIDEOS WHERE KEYWORD = '${keyword}'`;\n\n// Store the query in msg.topic for the SQL node to process\nmsg.topic = sqlQuery;\n\n// Return the message to pass it to the SQL node\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 680,
        "wires": [
            [
                "f43e7aa0dee7dd14"
            ]
        ]
    },
    {
        "id": "f43e7aa0dee7dd14",
        "type": "mysql",
        "z": "52f81779ae177af1",
        "mydb": "37bcb5733cefd284",
        "name": "NODE_RED_DB",
        "x": 470,
        "y": 680,
        "wires": [
            [
                "193b468e494b1f0d",
                "dbee7515923c3305"
            ]
        ]
    },
    {
        "id": "193b468e494b1f0d",
        "type": "debug",
        "z": "52f81779ae177af1",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 680,
        "wires": []
    },
    {
        "id": "dbee7515923c3305",
        "type": "function",
        "z": "52f81779ae177af1",
        "name": "Rearrange-Function",
        "func": "var default_filepath = global.get('default_keyword_filepath');\nvar switchBackToDefault = global.get('switchBackToDefault') || true;\nvar Clickevent_ =global.set(\"click_event\",true);\n\nif (msg.payload && msg.payload[0] && msg.payload[0].FILEPATH) {\n    var new_filepath = msg.payload[0].FILEPATH;\n\n    // Prepare the stop command\n    var stopCommand = `bash -c \"pkill vlc\"`;\n\n    // Prepare the start command\n    var startCommand = `bash -c \"DISPLAY=:0 exec -a testPID vlc --fullscreen ${new_filepath} --play-and-exit\"`;\n\n    // Send the stop command first\n    node.send({ payload: stopCommand });\n\n    // Delay sending the start command to ensure VLC has stopped\n    setTimeout(function () {\n        node.send({ payload: startCommand });\n    }, 1000); // Adjust the delay as needed (1000 ms = 1 second)\n\n    // Set flag to switch back to default after the new video ends\n    global.set('switchBackToDefault', true);\n\n} else {\n    if (switchBackToDefault) {\n        // Prepare the default video command\n        msg.payload = `bash -c \"DISPLAY=:0 exec -a testPID vlc --fullscreen ${default_filepath} --loop\"`;\n        global.set('switchBackToDefault', false);\n        return msg;\n    }\n    // If no default video playback is needed, return null\n    return null;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 760,
        "wires": [
            [
                "4212771a4f5a760e",
                "dc76000b5899f63e"
            ]
        ]
    },
    {
        "id": "4212771a4f5a760e",
        "type": "exec",
        "z": "52f81779ae177af1",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "bash",
        "x": 850,
        "y": 760,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "bd3bbfad92b186da",
        "type": "mysql",
        "z": "52f81779ae177af1",
        "mydb": "37bcb5733cefd284",
        "name": "NODE_RED_DB",
        "x": 690,
        "y": 500,
        "wires": [
            [
                "937ab7168763a377",
                "7061f835f81fb140"
            ]
        ]
    },
    {
        "id": "9931a8b838f1ba9c",
        "type": "function",
        "z": "52f81779ae177af1",
        "name": "function 6",
        "func": "// Extract the keyword from the incoming payload\nvar keyword = msg.payload.user.keyword;\n\n// Construct the MySQL query\nvar query = `SELECT FILEPATH FROM VIDEOS WHERE KEYWORD = '${keyword}'`;\n\n// Set the query in the msg object for the next node\nmsg.topic = query;\n\n// Pass the message to the next node\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 500,
        "wires": [
            [
                "bd3bbfad92b186da"
            ]
        ]
    },
    {
        "id": "937ab7168763a377",
        "type": "debug",
        "z": "52f81779ae177af1",
        "name": "debug 13",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 500,
        "wires": []
    },
    {
        "id": "7061f835f81fb140",
        "type": "function",
        "z": "52f81779ae177af1",
        "name": "function 7",
        "func": "// Check if the payload contains the FILEPATH\nif (msg.payload && msg.payload[0] && msg.payload[0].FILEPATH) {\n    // Extract the FILEPATH from the payload\n    var filepath = msg.payload[0].FILEPATH;\n\n    // Set the global variable default_keyword_filepath to the extracted filepath\n    global.set('default_keyword_filepath', filepath);\n\n    // Optionally log it to see the value in the debug window\n    node.log('FILEPATH set as global variable: ' + filepath);\n} else {\n    node.error('FILEPATH not found in msg.payload');\n}\n\n// Pass the message along\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "6d412ff7e4273f42",
        "type": "inject",
        "z": "52f81779ae177af1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 760,
        "wires": [
            [
                "dbee7515923c3305"
            ]
        ]
    },
    {
        "id": "9085356a5cefe95c",
        "type": "ui_button",
        "z": "52f81779ae177af1",
        "name": "",
        "group": "21c6a8c4487b95a0",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Start",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 290,
        "y": 840,
        "wires": [
            [
                "dbee7515923c3305"
            ]
        ]
    },
    {
        "id": "dc76000b5899f63e",
        "type": "debug",
        "z": "52f81779ae177af1",
        "name": "debug 16",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 840,
        "wires": []
    },
    {
        "id": "de7583e06da37fab",
        "type": "exec",
        "z": "52f81779ae177af1",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "bash",
        "x": 290,
        "y": 940,
        "wires": [
            [
                "59271fc86875cce7"
            ],
            [],
            []
        ]
    },
    {
        "id": "6e4d1fedac275880",
        "type": "inject",
        "z": "52f81779ae177af1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "bash -c \"pgrep --full \"testPID\"\"",
        "payloadType": "str",
        "x": 70,
        "y": 940,
        "wires": [
            [
                "de7583e06da37fab"
            ]
        ]
    },
    {
        "id": "59271fc86875cce7",
        "type": "function",
        "z": "52f81779ae177af1",
        "name": "function 8",
        "func": "var click_event = global.get(\"click_event\");\nvar temp=true;\n\nif (msg.payload === \"\") {\n    // No process was found, now check click_event\n    if (click_event === true) {\n        temp = true;\n    } else {\n        temp = false;\n    }\n} else {\n    // Process found, you can do something else here\n    temp = false;\n}\n\nmsg.payload=temp;\n\nif (temp===true){\n    return msg;\n}\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1040,
        "wires": [
            [
                "d8abd846cd12c7ed",
                "dbee7515923c3305"
            ]
        ]
    },
    {
        "id": "d8abd846cd12c7ed",
        "type": "debug",
        "z": "52f81779ae177af1",
        "name": "debug 17",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 1040,
        "wires": []
    },
    {
        "id": "cb38b324aa04e25e",
        "type": "inject",
        "z": "52f81779ae177af1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 1200,
        "wires": [
            [
                "ea183cf2a93088ca",
                "5140ba7b5fb572ca"
            ]
        ]
    },
    {
        "id": "ea183cf2a93088ca",
        "type": "function",
        "z": "52f81779ae177af1",
        "name": "ReSet",
        "func": "global.set(\"click_event\", false);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "5140ba7b5fb572ca",
        "type": "exec",
        "z": "52f81779ae177af1",
        "command": "bash -c \"pkill vlc\"",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "bash",
        "x": 430,
        "y": 1280,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "7685769d0843afff",
        "type": "comment",
        "z": "52f81779ae177af1",
        "name": "Data base Creation ",
        "info": "Database Creation ",
        "x": 150,
        "y": 60,
        "wires": []
    },
    {
        "id": "a2aee26994fb3e6b",
        "type": "comment",
        "z": "52f81779ae177af1",
        "name": "Default Video",
        "info": "",
        "x": 110,
        "y": 340,
        "wires": []
    },
    {
        "id": "0c9d40e50d3a1980",
        "type": "comment",
        "z": "52f81779ae177af1",
        "name": "MQTT trigger event ",
        "info": "",
        "x": 150,
        "y": 520,
        "wires": []
    },
    {
        "id": "791cc1e44c3515b8",
        "type": "comment",
        "z": "52f81779ae177af1",
        "name": "Reset ",
        "info": "",
        "x": 70,
        "y": 1100,
        "wires": []
    },
    {
        "id": "c6bcc53119172c01",
        "type": "ui_group",
        "name": "Signage",
        "tab": "427f3d150d79e472",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "37bcb5733cefd284",
        "type": "MySQLdatabase",
        "name": "Database",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "NODERED",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "6fe2ec477b5390cb",
        "type": "ui_group",
        "name": "Enter the Default keyword",
        "tab": "59bf0c25e075901c",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b99d025e1c14164d",
        "type": "mqtt-broker",
        "name": "MQTT-reComputer",
        "broker": "192.168.8.195",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "21c6a8c4487b95a0",
        "type": "ui_group",
        "name": "Start App",
        "tab": "eaacba7838a34d7a",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "427f3d150d79e472",
        "type": "ui_tab",
        "name": "Enter the data ",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "59bf0c25e075901c",
        "type": "ui_tab",
        "name": "Keyword",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "eaacba7838a34d7a",
        "type": "ui_tab",
        "name": "Digital Signage",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    }
]
